{"version":3,"sources":["../public/images sync /^/.*$","../public/images/angelfish.jpg","../public/images/barracuda.jpeg","../public/images/butterfly.jpg","../public/images/chromis.jpg","../public/images/clownfish.jpg","../public/images/creolewrasse.jpg","../public/images/damselfish.jpg","../public/images/grunt.jpg","../public/images/parrotfish.jpg","../public/images/rockbeauty.jpg","../public/images/sergeantmajor.JPG","../public/images/tang.jpg","components/navbar/navbar.js","components/footer/footer.js","components/card/card.js","App.js","serviceWorker.js","index.js"],"names":["map","./angelfish.jpg","./barracuda.jpeg","./butterfly.jpg","./chromis.jpg","./clownfish.jpg","./creolewrasse.jpg","./damselfish.jpg","./grunt.jpg","./parrotfish.jpg","./rockbeauty.jpg","./sergeantmajor.JPG","./tang.jpg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","Navbar","react_default","a","createElement","className","this","props","score","Component","Footer","Card","onClick","imageClick","alt","image","replace","src","require","App","state","picture","clickedPicture","tally","handleClick","event","currentPic","target","_this","indexOf","setState","sort","b","Math","random","alert","concat","_this2","navbar_navbar","card_card","key","footer_footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ba45dc3.chunk.js","sourcesContent":["var map = {\n\t\"./angelfish.jpg\": 24,\n\t\"./barracuda.jpeg\": 25,\n\t\"./butterfly.jpg\": 26,\n\t\"./chromis.jpg\": 27,\n\t\"./clownfish.jpg\": 28,\n\t\"./creolewrasse.jpg\": 29,\n\t\"./damselfish.jpg\": 30,\n\t\"./grunt.jpg\": 31,\n\t\"./parrotfish.jpg\": 32,\n\t\"./rockbeauty.jpg\": 33,\n\t\"./sergeantmajor.JPG\": 34,\n\t\"./tang.jpg\": 35\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 23;","module.exports = __webpack_public_path__ + \"static/media/angelfish.5d65332c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/barracuda.52f65e45.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/butterfly.321b172f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chromis.df16d5fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clownfish.1069ab6f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/creolewrasse.49b9dc5f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/damselfish.228f9d14.jpg\";","module.exports = __webpack_public_path__ + \"static/media/grunt.06b9c316.jpg\";","module.exports = __webpack_public_path__ + \"static/media/parrotfish.b27ddfcf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rockbeauty.b376e509.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sergeantmajor.4395feb1.JPG\";","module.exports = __webpack_public_path__ + \"static/media/tang.5247794b.jpg\";","import React, { Component } from \"react\";\nimport \"./navbar.css\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-default navbar-fixed-top\">\n         <ul>\n          <li className=\"itemLeft\">Test Your Memory</li>\n          <li className=\"itemCenter\"></li>\n          <li className=\"itemRight\">Score: {this.props.score}</li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;","import React from \"react\";\nimport \"./footer.css\";\n\nconst Footer = () => (\n\t<header className = \"footer\">\n\t\t<p>\n\t\t\t\n\t\t</p>\n\t</header>\n);\n\nexport default Footer;","//sets up the reusable Card component\nimport React from \"react\";\nimport \"./card.css\";\n\n//pass the image into each card so all 12 are rendered\nconst Card = props => (\n  <div className=\"card\" onClick={props.imageClick}>\n    <div className=\"img-container\">\n      <img alt={props.image.replace(\".jpg\", \"\")} src={require(\"../../../public/images/\" + props.image)} />\n    </div>\n  </div>\n);\n\nexport default Card;","import React, { Component } from 'react';\nimport Navbar from \"./components/navbar\";\nimport Footer from \"./components/footer\";\nimport Card from \"./components/card\";\nimport picture from \"./picture.json\"\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    picture,\n    clickedPicture: [],\n    tally: 0\n  };\n\n  handleClick = event => {\n    const currentPic = event.target.alt;\n    const clickedPic = this.state.clickedPicture.indexOf(currentPic) > -1;\n\n    if (clickedPic) {\n      this.setState({\n        picture: this.state.picture.sort(function(a, b) {\n          return 0.5 - Math.random();\n        }),\n        clickedPicture: [],\n        tally: 0\n      });\n      alert(\"Wroooooong! Play again?\");\n    } else {\n      this.setState({ \n        picture: this.state.picture.sort(function(a, b) {\n          return 0.5 - Math.random();\n        }),\n      clickedPicture: this.state.clickedPicture.concat(\n        currentPic\n      ),\n      tally: this.state.tally + 1\n    },\n        () => {\n          if (this.state.tally === 12) {\n            alert(\"You wooooooon!\");\n            this.setState({ picture: this.state.picture.sort(function(a, b) {\n              return 0.5 - Math.random();\n            }),\n            clickedPicture: [],\n            tally: 0  \n            });\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar\n          tally={this.state.tally}\n        />\n        <h1 className=\"offset-5s\">\n          Click the Pics!\n        </h1>\n        <div className=\"wrapper\">\n          {this.state.picture.map(picture => (\n            <Card\n              handleClick={this.handleClick}\n              id={picture.id}\n              key={picture.id}\n              image={picture.image}\n            />\n          ))}\n        </div>\n        <Footer />    \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}